
import json
import os


# Constantes

ARCHIVO_BICICLETAS = 'bicicletas.json'


# Funciones utilitarias


def cargar_datos():
    if os.path.exists(ARCHIVO_BICICLETAS):
        with open(ARCHIVO_BICICLETAS, 'r') as archivo:
            return json.load(archivo)
    else:
        return []

def guardar_datos(bicicletas):
    with open(ARCHIVO_BICICLETAS, 'w') as archivo:
        json.dump(bicicletas, archivo, indent=4)

def generar_id(bicicletas):
    if bicicletas:
        return max(b['id'] for b in bicicletas) + 1
    else:
        return 1


# Funciones de CRUD


def alta_bicicleta(bicicletas):
    print("\n--- Alta de Bicicleta ---")
    modelo = input("Modelo: ")
    tama√±o = input("Tama√±o: ")
    color = input("Color: ")
    stock = int(input("Stock disponible: "))

    bicicleta = {
        "id": generar_id(bicicletas),
        "modelo": modelo,
        "tama√±o": tama√±o,
        "color": color,
        "stock": stock
    }

    bicicletas.append(bicicleta)
    guardar_datos(bicicletas)
    print("‚úÖ Bicicleta agregada con √©xito.")

def baja_bicicleta(bicicletas):
    print("\n--- Baja de Bicicleta ---")
    id_baja = int(input("Ingrese el ID de la bicicleta a eliminar: "))
    bicicleta = next((b for b in bicicletas if b['id'] == id_baja), None)

    if bicicleta:
        bicicletas.remove(bicicleta)
        guardar_datos(bicicletas)
        print("‚úÖ Bicicleta eliminada.")
    else:
        print("‚ö†Ô∏è No se encontr√≥ la bicicleta con ese ID.")

def modificar_bicicleta(bicicletas):
    print("\n--- Modificaci√≥n de Bicicleta ---")
    id_mod = int(input("Ingrese el ID de la bicicleta a modificar: "))
    bicicleta = next((b for b in bicicletas if b['id'] == id_mod), None)

    if bicicleta:
        print(f"Modificando bicicleta ID {id_mod}: {bicicleta}")
        bicicleta['modelo'] = input(f"Nuevo modelo ({bicicleta['modelo']}): ") or bicicleta['modelo']
        bicicleta['tama√±o'] = input(f"Nuevo tama√±o ({bicicleta['tama√±o']}): ") or bicicleta['tama√±o']
        bicicleta['color'] = input(f"Nuevo color ({bicicleta['color']}): ") or bicicleta['color']
        nuevo_stock = input(f"Nuevo stock ({bicicleta['stock']}): ")
        if nuevo_stock:
            bicicleta['stock'] = int(nuevo_stock)
        
        guardar_datos(bicicletas)
        print("‚úÖ Bicicleta modificada.")
    else:
        print("‚ö†Ô∏è No se encontr√≥ la bicicleta con ese ID.")


# Funciones de Listado e Informes


def listar_bicicletas(bicicletas):
    print("\n--- Listado de Bicicletas ---")
    if not bicicletas:
        print("No hay bicicletas registradas.")
        return
    for b in bicicletas:
        print(f"ID: {b['id']} | Modelo: {b['modelo']} | Tama√±o: {b['tama√±o']} | Color: {b['color']} | Stock: {b['stock']}")

def reporte_stock_total(bicicletas):
    print("\n--- Reporte de Stock Total ---")
    total_stock = sum(b['stock'] for b in bicicletas)
    print(f"Total de bicicletas en stock: {total_stock}")


# Men√∫ principal


def menu_admin(bicicletas):
    while True:
        print("\n--- Men√∫ Administrador ---")
        print("1. Alta de Bicicleta")
        print("2. Baja de Bicicleta")
        print("3. Modificaci√≥n de Bicicleta")
        print("4. Listar Bicicletas")
        print("5. Reporte de Stock Total")
        print("6. Salir")
        opcion = input("Seleccione una opci√≥n: ")

        if opcion == '1':
            alta_bicicleta(bicicletas)
        elif opcion == '2':
            baja_bicicleta(bicicletas)
        elif opcion == '3':
            modificar_bicicleta(bicicletas)
        elif opcion == '4':
            listar_bicicletas(bicicletas)
        elif opcion == '5':
            reporte_stock_total(bicicletas)
        elif opcion == '6':
            break
        else:
            print("‚ö†Ô∏è Opci√≥n no v√°lida.")

def menu_cliente(bicicletas):
    while True:
        print("\n--- Men√∫ Cliente ---")
        print("1. Ver cat√°logo de bicicletas")
        print("2. Reservar bicicleta (simulaci√≥n)")
        print("3. Salir")
        opcion = input("Seleccione una opci√≥n: ")

        if opcion == '1':
            listar_bicicletas(bicicletas)
        elif opcion == '2':
            listar_bicicletas(bicicletas)
            id_reserva = int(input("Ingrese el ID de la bicicleta que desea reservar: "))
            bicicleta = next((b for b in bicicletas if b['id'] == id_reserva), None)

            if bicicleta and bicicleta['stock'] > 0:
                print(f"‚úÖ Ha reservado una bicicleta {bicicleta['modelo']} ({bicicleta['color']}). ¬°Gracias por su compra!")
            else:
                print("‚ö†Ô∏è Bicicleta no disponible.")
        elif opcion == '3':
            break
        else:
            print("‚ö†Ô∏è Opci√≥n no v√°lida.")


# Programa principal

def main():
    bicicletas = cargar_datos()

    while True:
        print("\n=== Tienda de Bicicletas ===")
        print("1. Ingresar como Administrador")
        print("2. Ingresar como Cliente")
        print("3. Salir")
        opcion = input("Seleccione una opci√≥n: ")

        if opcion == '1':
            menu_admin(bicicletas)
        elif opcion == '2':
            menu_cliente(bicicletas)
        elif opcion == '3':
            print("üëã ¬°Gracias por usar el sistema!")
            break
        else:
            print("‚ö†Ô∏è Opci√≥n no v√°lida.")

if __name__ == "__main__":
    main()
